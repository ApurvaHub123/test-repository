{
  "ruleLogicalInfo" : {
    "id" : 35301,
    "ruleInstanceId" : 0,
    "ruleDesc" : "",
    "execMode" : "script",
    "exitCode" : null,
    "folderId" : 19244,
    "projectId" : 19243,
    "ruleCode" : "1694775672187",
    "folderName" : "snowflake-script",
    "folderType" : "RULE",
    "startTime" : null,
    "endTime" : null,
    "ruleName" : "fdfv_1694775672187",
    "displayName" : null,
    "rulePurpose" : "",
    "ruleTemplate" : null,
    "statusName" : null,
    "ruleCreatedBy" : 7,
    "ruleModifiedBy" : 0,
    "subjectAreaKey" : 0,
    "ruleStatus" : 1,
    "ruleCreateDate" : "2023-09-15 00:00:00",
    "ruleModifiedDate" : null,
    "enterpriseErrorCode" : "",
    "legalEntityId" : 1,
    "subjectAreaName" : null,
    "execNode" : "",
    "children" : null,
    "objVOList" : [ ],
    "tagVOList" : [ ],
    "ruleFlowList" : null,
    "ruleType" : "Warning",
    "auditExecutedByProcess" : null,
    "auditExecutionMedium" : null,
    "auditExecutionMediumName" : null,
    "comments" : null,
    "successMailUsers" : [ ],
    "failureMailUsers" : [ ],
    "successHeader" : "",
    "failureHeader" : "",
    "failureAttFlag" : 0,
    "successAttFlag" : 0,
    "srcConnId" : 0,
    "trgConnId" : 0,
    "srcSysGroupId" : 0,
    "trgSysGroupId" : 0,
    "srcConn" : null,
    "trgConn" : null,
    "elapseTime" : 0,
    "parameterId" : "",
    "type" : null,
    "isRuleExit" : null,
    "ruleCreatedByName" : "admin",
    "projectName" : "17.5.10",
    "ruleModifiedByName" : null,
    "ruleClassId" : 35302,
    "successBody" : "",
    "failureBody" : "",
    "templateId" : 206,
    "templateIdFail" : 206,
    "reportIdList" : [ ],
    "contextInstanceId" : 0,
    "srcConnFlag" : "",
    "trgConnFlag" : "",
    "degreeOfParallelism" : 0,
    "userComments" : null,
    "templateName" : "Rule Template-Default",
    "templateFailureName" : "Rule Template-Default",
    "objExists" : true
  },
  "rulePhysicalInfo" : {
    "objectName" : null,
    "ruleId" : 35301,
    "reportRuleClassId" : 0,
    "ruleCId" : 0,
    "classVOList" : [ {
      "classId" : 3,
      "name" : null,
      "ruleClassId" : 35302,
      "connType" : "Database",
      "execMode" : "script",
      "index" : 1,
      "classRun" : "com.ice.bpel.CompareData",
      "vid" : "CompareData11",
      "classObjName" : "ICE_1694775002454",
      "queryBuilderXML" : null,
      "connId" : 0,
      "resultType" : "",
      "connName" : null,
      "connUrl" : null,
      "connFullUrl" : null,
      "sysGrpId" : 0,
      "ruleId" : 0,
      "ruleName" : null,
      "ruleParameter" : null,
      "srcTrgMaplist" : [ ],
      "exprlist" : [ ],
      "derivedexprlist" : null,
      "paramsVOLst" : [ {
        "ruleClsPropID" : 35306,
        "paramId" : 231,
        "paramMethod" : "setGroovyScript",
        "paramValue" : "import groovy.json.JsonOutput;\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\ndef (sqlCon,POST_URL) = [sqlServer,\"http://aidtqredata.webfarm-dev.ms.com:3221/aidtqredata/pushRFBDataN\"];\ndef NAS_PARENT_DIR = \"D:\\\\\"\ndef (ENV,IDN_RFB,REGRESSION_PACKS,NAS_PATH) = [\"TEST\", \"TEST1\", \"25602\",\"#NAS_PATH#\"];\ninstanceLog.info(\"Parameters ENV $ENV IDN_RFB $IDN_RFB \");\ninstanceLog.info(\"REGRESSION PACKS $REGRESSION_PACKS NAS_PATH $NAS_PATH \");\ndef STEPS_SQL = \"\"\"\nselect test_case_name,TEST_CASE_ID  from ice_test_case where test_case_id =353019 \n\"\"\"\ndef SUMMARY_SQL = \"\"\"\nselect test_case_name,TEST_CASE_ID  from ice_test_case where test_case_id =353019 \n\"\"\"\ndef REPORT_SQL = \"\"\"\nselect test_case_name,TEST_CASE_ID  from ice_test_case where test_case_id =353019 \n\"\"\"\ntry {\n  /* Parse Regression Pack IDs - START */\n  def reg_pack_arr = REGRESSION_PACKS.split(\",\");\n  def reg_pack_list = \"\";\n  for (String value : reg_pack_arr) {\n    if (value.startsWith(\"'\")) {\n      reg_pack_list = reg_pack_list + value + \",\";\n    } else {\n      reg_pack_list = reg_pack_list + \"'\" + value + \"',\";\n    }\n  }\n  if (reg_pack_list.length() > 0) {\n    reg_pack_list = reg_pack_list.substring(0,reg_pack_list.length() - 1)\n  } else {\n    instanceLog.info(\"Regression Pack List is empty\");\n    return \"-25\";\n  }\n  /* Parse Regression Pack IDs - END */\n  /* Fetch Summary Data from ICERepo - START */\n  def (FAILED_TC, PASSED_TC, ERROR_TC, NULL_TC, TOTAL_TC, EXECUTION_DATE, RAG_STATUS) = [0,0,0,0,0,\"\",\"GREEN\"];\n  def result = sqlCon.rows(SUMMARY_SQL);\n /* if (result.size() != 1) {\n      instanceLog.info(\"No Rows or Multiple Rows returned. Size :\" + result.size().toString());\n      return \"-25\";\n  }*/\n  result.each { row ->\n      EXECUTION_DATE = row.test_case_name;\n  }\n  /* Fetch Summary Data from ICERepo - END */\n/* Create Directory in NAS Location - START */\n  LocalDateTime tdate = LocalDateTime.now();\n  DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyyMMdd_HHmmss\")\n  def FOLDER_NAME = ENV + \"_\" + tdate.format(formatter);\n  def JSON_FILE_NAME = \"QRE_DB_\" + tdate.format(formatter) + \".json\";\n  def REPORT_FILE_NAME = \"RFB_TestResults_\" + tdate.format(formatter) + \".csv\";\n  def DIR_PATH = NAS_PARENT_DIR + NAS_PATH + \"/RFB/\" + ENV + \"/\" + FOLDER_NAME;\n  Files.createDirectories(Paths.get(DIR_PATH));\n  /* Create Directory in NAS Location - END */\n  /* Fetch Step Data from ICERepo and create json array - START */\n  def (columnNames,stepdata,jsondata,rowcnt) = [null,[],[:],0]\n  sqlCon.eachRow(STEPS_SQL) { row ->\n      jsondata = [:];\n      rowcnt++;\n      if (columnNames == null) {\n          columnNames = row.toRowResult().keySet();\n          instanceLog.info(\"Column Names\" + columnNames);\n      }\n      columnNames.each() { k ->\n          jsondata[k] = row.\"${k}\";\n      }\n    stepdata << jsondata;\n  }\n  if (rowcnt == 0) {\n      instanceLog.info(\"No Rows returned by STEPS_SQL : \" + STEPS_SQL);\n      return \"-25\";\n  }\n  /* Fetch Step Data from ICERepo and create json array - END */\n  /* Calculate RAG_STATUS - START */\n  if (TOTAL_TC == PASSED_TC) {\n        RAG_STATUS = \"GREEN\";\n  } else {\n        PASS_PER = (PASSED_TC*100)/(PASSED_TC + FAILED_TC + ERROR_TC);\n        if (PASS_PER > 50) {\n          RAG_STATUS = \"AMBER\";\n        } else {\n          RAG_STATUS = \"RED\";\n        }\n  }\n  instanceLog.info(\"TOTAL_TC: \" + TOTAL_TC + \" PASSED_TC: \" + PASSED_TC);\n  instanceLog.info(\"FAILED_TC :\" + FAILED_TC + \"ERROR_TC :\" + ERROR_TC);\n  instanceLog.info(\"NULL_TC :\" + NULL_TC);\n  instanceLog.info(\"RAG_STATUS :\" + RAG_STATUS);\n  /* Calculate RAG_STATUS - END */\n  /* Create JSON Request Body and Write to NAS Location - START */\n  def requestBody = [:]\n  requestBody['ENV'] = ENV;\n  requestBody['EXECUTION_DATE'] = EXECUTION_DATE;\n  requestBody['IDN_RFB'] = IDN_RFB;\n  requestBody['RAG_STATUS'] = RAG_STATUS;\n  requestBody['STEP'] = stepdata;\n  def json_str = JsonOutput.toJson(requestBody)\n  def json_beauty = JsonOutput.prettyPrint(json_str)\n  instanceLog.info(\"JSON Request : \" + json_beauty);\n  File file = new File (DIR_PATH + \"/\" + JSON_FILE_NAME)\n  file.write(json_beauty)\n  return \"-25\";\n} catch (Exception e) {\n  instanceLog.info(\"Exception\" + e);\n  return \"-25\";\n}",
        "srcTrgTbllist" : [ ],
        "fileContent" : null
      }, {
        "ruleClsPropID" : 35305,
        "paramId" : 293,
        "paramMethod" : "setGroovyHeader",
        "paramValue" : "import groovy.sql.*; import java.sql.*; import com.ice.bpel.*; import com.ice.bpel.Parameter; import com.ice.object.ParametersVO; import com.ice.object.ParameterKeyValueVO; import com.ice.iqa.*; ",
        "srcTrgTbllist" : null,
        "fileContent" : null
      }, {
        "ruleClsPropID" : 35303,
        "paramId" : 272,
        "paramMethod" : "setGroovyCon",
        "paramValue" : "34725",
        "srcTrgTbllist" : [ ],
        "fileContent" : null
      } ],
      "bigDataExecMode" : null,
      "srcConnServer" : null,
      "trgConnServer" : null,
      "srcConnExecMode" : null,
      "trgConnExecMode" : null,
      "thresholdFlag" : null,
      "thresholdExpression" : null
    } ],
    "srcTrgTbllist" : null,
    "colMapList" : null,
    "objectVOList" : null,
    "srcCount" : null,
    "trgCount" : null,
    "srcMissing" : null,
    "trgMissing" : null,
    "commonRows" : null,
    "classResult" : null,
    "classStatus" : null,
    "resultType" : null,
    "showErrorData" : null,
    "reportXlsx" : null,
    "ruleParameter" : "",
    "classCreatedBy" : 0,
    "classModifydBy" : 0,
    "classCreateDate" : null,
    "classModifyDate" : null,
    "exprVOList" : [ ],
    "derivedvariablelist" : null
  }
}